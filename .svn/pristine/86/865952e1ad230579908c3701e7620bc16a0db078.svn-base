package test.cmd;

import static org.junit.Assert.*;

import org.junit.After;
import org.junit.Before;
import org.junit.Test;

import cmd.Cat;
import cmd.Cd;
import cmd.Pwd;
import directory.DirectoryFileTree;
import directory.DirectoryTree;
import driver.JShell;
import files.Directory;
import files.File;
import java.util.ArrayList;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;

public class CdTest {
    
    @Test
    public void cdTest() {
        Directory root = mock(Directory.class);
        when(root.getParent()).thenReturn(null);
        when(root.getName()).thenReturn("root");
        
        Directory dir1 = mock(Directory.class);
        when(dir1.getParent()).thenReturn(root);
        when(dir1.getName()).thenReturn("dir1");                
        
        DirectoryTree.setCurrent(root);
        
        Cd cd = new Cd();
        cd.setParameters("dir1");

        assertTrue(cd.run());
    }

	/*
	
	@Test
	public void cdBackToParentDirTest() {
		
            Cd cd = new Cd();
            Pwd pwd = new Pwd();

            pwd.run();
            cd.setParameters("directory1");
            assertTrue(cd.run());	
            cd.setParameters("..");
            assertTrue(cd.run());
		
	}
	*/
    
    @Test
    public void testToString() {
        Cd instance = new Cd();
        String expResult = "The command cd changes to directory passed as"
                + " an argument. i.e cd + arg(dir)";
        String result = instance.toString();
        assertEquals(expResult, result);
    }
}
